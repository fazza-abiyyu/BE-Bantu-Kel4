generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model log {
  id          Int        @id @unique(map: "Log_id_key") @default(autoincrement())
  user_id     Int
  action      log_action
  description String
  create_at   DateTime   @default(now())
  user        user       @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "Log_user_id_fkey")

  @@index([user_id], map: "Log_user_id_fkey")
}

model perusahaan {
  id                Int      @id @default(autoincrement())
  email             String   @unique(map: "Perusahaan_email_key")
  password          String
  nama_perusahaan   String
  gambar_perusahaan String
  alamat            String?
  no_telepon        String?
  created_at        DateTime @default(now())
  updated_at        DateTime
}

model refreshtoken {
  id            Int      @id @unique(map: "RefreshToken_id_key") @default(autoincrement())
  user_id       Int
  refresh_token String   @unique(map: "RefreshToken_refresh_token_key")
  create_at     DateTime @default(now())
  update_at     DateTime
  user          user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "RefreshToken_user_id_fkey")

  @@index([user_id], map: "RefreshToken_user_id_fkey")
}

model user {
  id           Int            @id @default(autoincrement())
  email        String         @unique(map: "User_email_key")
  password     String?
  role         user_role      @default(USER)
  created_at   DateTime       @default(now())
  updated_at   DateTime
  log          log[]
  refreshtoken refreshtoken[]
  userprofile  userprofile?
}

model userprofile {
  id              Int      @id @default(autoincrement())
  profile_picture String?
  full_name       String
  phone_number    String?  @unique(map: "UserProfile_phone_number_key")
  city            String?
  country         String?
  created_at      DateTime @default(now())
  updated_at      DateTime
  user_id         Int      @unique(map: "UserProfile_user_id_key")
  user            user     @relation(fields: [user_id], references: [id], map: "UserProfile_user_id_fkey")
}

enum log_action {
  LOGOUT
  LOGIN
  CREATE
  UPDATE
  DELETE
}

enum user_role {
  USER
  ADMIN
  FREELANCER
}
